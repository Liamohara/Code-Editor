import Window from "./window";

// This allows TypeScript to use the magic constant that's auto-generated by Electron Forge's Webpack plugin.
declare const DOCS_WINDOW_WEBPACK_ENTRY: string;
declare const DOCS_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

class DocsWindow extends Window {
  private static instance: DocsWindow;

  private constructor(darkMode: boolean, section: string) {
    super(
      DOCS_WINDOW_WEBPACK_ENTRY,
      DOCS_WINDOW_PRELOAD_WEBPACK_ENTRY,
      darkMode
    );

    this.window.webContents.once("did-finish-load", () => {
      this.send("docs:jump", section);
    });

    this.window.once("closed", (): void => (DocsWindow.instance = null));
  }

  show(section?: string) {
    this.focus();

    if (section) this.jump(section);
  }

  static getInstance(
    darkMode: boolean,
    section?: string
  ): [DocsWindow, boolean] {
    const newInstance = !this.instance;

    if (newInstance) {
      this.instance = new DocsWindow(darkMode, section);
    }

    return [this.instance, newInstance];
  }

  private jump(section: string) {
    DocsWindow.instance.send("docs:jump", section);
  }

  private focus() {
    DocsWindow.instance.window.focus();
  }
}

export default DocsWindow;

// TODO Add on-focus event listener
